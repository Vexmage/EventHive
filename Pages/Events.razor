@page "/events"
@inject EventDbContext DbContext
@using AccessibleEventTool.Data
@using Microsoft.EntityFrameworkCore

<h2>Manage Your Events</h2>

<div>
    <button class="btn btn-success mb-3" @onclick="OpenAddEventModal">Add Event</button>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Date</th>
            <th>Description</th>
            <th>Location</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var eventItem in events)
        {
            <tr>
                <td>@eventItem.Name</td>
                <td>@eventItem.Date.ToString("yyyy-MM-dd")</td>
                <td>@eventItem.Description</td>
                <td>@eventItem.Location</td>
                <td>
                    <button class="btn btn-primary btn-sm">Edit</button>
                    <button class="btn btn-danger btn-sm">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Add Event Modal -->
@if (isAddEventModalOpen)
{
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Event</h5>
                    <button type="button" class="btn-close" @onclick="CloseAddEventModal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" class="form-control" @bind="newEvent.Name" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Date</label>
                        <input type="date" class="form-control" @bind="newEvent.Date" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" @bind="newEvent.Description"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Location</label>
                        <input type="text" class="form-control" @bind="newEvent.Location" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CloseAddEventModal">Close</button>
                    <button class="btn btn-primary" @onclick="AddEvent">Save</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Event> events = new();
    private bool isAddEventModalOpen = false;
    private Event newEvent;

    protected override async Task OnInitializedAsync()
    {
        events = await DbContext.Events.ToListAsync();
    }

    private void OpenAddEventModal()
    {
        newEvent = new Event
        {
            Name = string.Empty,
            Description = string.Empty,
            Location = string.Empty,
            Date = DateTime.Now
        };
        isAddEventModalOpen = true;
    }

    private void CloseAddEventModal()
    {
        isAddEventModalOpen = false;
    }

    private async Task AddEvent()
    {
        if (string.IsNullOrWhiteSpace(newEvent.Name) || string.IsNullOrWhiteSpace(newEvent.Location))
        {
            // Add validation message handling here if needed
            return;
        }

        DbContext.Events.Add(newEvent);
        await DbContext.SaveChangesAsync();

        // Update the local list to reflect the changes
        events.Add(newEvent);

        CloseAddEventModal();
    }
}
